%token LET   END   STOP   RETURN   DATA   INPUT   DIM   PRINT   GOSUB   GOTO   IF   THEN   FOR   TO   STEP   NEXT   PSEUDO_DEF   PARAMETER_DEF
%token STRING_LITERAL   COMMENT   ARITHMETIC_OP   LOGICAL_OP   RELATIONAL_OP   REAL   INTEGER   LINE_NO   ARRAY_ID   SPACE  NLINE
%token DOUBLE_ID   INT_ID   STRING_ID    SINGLE_ID
%{
#include<stdio.h>
FILE *yyin,*yyout;
int yylex(void);
%}

%%
COM_STMT:
LINE_NO SPACE COMMENT;

STOP_STMT:
LINE_NO SPACE STOP;

END_STMT:
LINE_NO SPACE END;

RETURN_STMT:
LINE_NO SPACE RETURN;

GOSUB_STMT:
LINE_NO SPACE GOSUB SPACE LINE_NO;

GOTO_STMT:
LINE_NO SPACE GOTO SPACE LINE_NO;

DATA_STMT:
LINE_NO SPACE DATA SPACE DATALIST;

DATALIST:
DATA_EL 
|DATALIST ',' DATAEL;

DATA_EL:
INTEGER | LINE_NO | STRING_LITERAL | REAL ;

DEFINE_STMT:
LINE_NO SPACE PSEUDO_DEF SPACE '=' SPACE  NUM_EXPR
|LINE_NO SPACE PARAMETER_DEF SPACE '=' SPACE  NUM_EXPR

IF_STMT:
LINE_NO SPACE IF SPACE BOOL_EXPR SPACE THEN SPACE LINE_NO;

DIM_STMT:
LINE_NO SPACE DIM SPACE ARRAY_LIST;

ARRAY_LIST:
ARRAY_LIST ',' ARRAY_ID
|ARRAY_ID;

INPUT_STMT:  
LINE_NO SPACE INPUT SPACE ID_LIST;

ID_EL:
DOUBLE_ID | INT_ID | STRING_ID | SINGLE_ID | ARRAY_ID;

ID_LIST:
ID_LIST ',' ID_EL 
|ID_EL;

ASSIGN_STMT:
DOUBLE_ID SPACE '=' SPACE NUM_EXPR
| INT_ID SPACE '=' SPACE NUM_EXPR
| STRING_ID SPACE '=' SPACE STRING_LITERAL
| SINGLE_ID SPACE '=' SPACE NUM_EXPR;

LET_STMT: LINE_NO SPACE ASSIGN_STMT;

PRINT_STMT:
LINE_NO SPACE PRINT PRINT_LIST
|LINE_NO SPACE PRINT;

%%

int main(){
yyin=fopen("in.txt","r");
yyout=fopen("in.txt","w");
yyparse();
return 0;
}
